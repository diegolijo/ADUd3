/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jit.adud3grafica.FramesAuxiliares;

import Objetos.*;
import java.awt.Component;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import static jit.adud3grafica.Metodos.*;
import static jit.adud3grafica.OperacionesBD.*;

/**
 *
 * @author jit
 */
public class JFrameTendas extends javax.swing.JFrame {

    private Tenda tenda;

    /**
     * Creates new form tendas
     */
    public JFrameTendas() {
        initComponents();
        this.setLocationRelativeTo(null);

        formatearCombos();
        llenarComboProvincias();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxProv = new javax.swing.JComboBox<>();
        jComboBoxTenda = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBoxProv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxProvItemStateChanged(evt);
            }
        });

        jComboBoxTenda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTendaItemStateChanged(evt);
            }
        });

        jButton1.setText("Eliminar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxProv, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxTenda, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(154, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxTendaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTendaItemStateChanged
        tenda = (Tenda) jComboBoxTenda.getSelectedItem();
    }//GEN-LAST:event_jComboBoxTendaItemStateChanged

    private void jComboBoxProvItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxProvItemStateChanged
        llenarComboTendas();
    }//GEN-LAST:event_jComboBoxProvItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (tenda.getIdTenda()!=0) {
            try {
                Connection con = conexion();
                deleteTenda(con, tenda);
                llenarComboTendas();             
                
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(JFrameTendas.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameTendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameTendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameTendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameTendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameTendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Provincia> jComboBoxProv;
    private javax.swing.JComboBox<Tenda> jComboBoxTenda;
    // End of variables declaration//GEN-END:variables

    public void formatearCombos() {
        //vista de los valores en los combos
        jComboBoxProv.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index,
                        isSelected, cellHasFocus);

                if (value != null) {
                    Provincia provincia = (Provincia) value;
                    setText(provincia.getNome());
                }
                return this;
            }
        });

        jComboBoxTenda.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index,
                        isSelected, cellHasFocus);

                if (value != null) {
                    Tenda tenda = (Tenda) value;
                    setText(tenda.getNome());
                }
                return this;
            }
        });

    }

    public void llenarComboProvincias() {

        try {
            //llenamos el conboBox de las provincias existentes
            jComboBoxProv.removeAllItems();

            Provincia provincia0 = new Provincia(0, "Selecciona Provincia");
            jComboBoxProv.addItem(provincia0);

            Connection con = conexion();

            List<Provincia> provincia = selectProvincias(con);
            for (Provincia p : provincia) {
                jComboBoxProv.addItem(p);
            }
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(JFrameTendas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarComboTendas() {

        try {
            //llenamos el conboBox de las provincias existentes
            jComboBoxTenda.removeAllItems();

            Tenda tenda0 = new Tenda(0, "Selecciona Tenda", "", 0);
            jComboBoxTenda.addItem(tenda0);

            Connection con = conexion();

            Provincia provincia = (Provincia) jComboBoxProv.getSelectedItem();

            if (provincia.getId() != 0) {
                List<Tenda> tenda = selectTendaxProv(con, provincia.getId());
                for (Tenda p : tenda) {
                    jComboBoxTenda.addItem(p);
                }
            } else if (provincia.getId() == 0) {
                List<Tenda> tenda = selectTendas(con);
                for (Tenda p : tenda) {
                    jComboBoxTenda.addItem(p);
                }

            }
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(JFrameTendas.class.getName()).log(Level.SEVERE, null, ex);

        }

    }

}
