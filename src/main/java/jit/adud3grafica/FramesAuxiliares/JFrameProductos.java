package jit.adud3grafica.FramesAuxiliares;

import Objetos.*;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static jit.adud3grafica.Metodos.*;
import static jit.adud3grafica.OperacionesBD.*;

public class JFrameProductos extends javax.swing.JFrame {

    private Producto producto;

    /**
     * Creates new form JFrameProductos
     */
    public JFrameProductos() {
        initComponents();
        this.setLocationRelativeTo(null);

        llenarComboProductos();

        formatearCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonEliminar = new javax.swing.JButton();
        jTextFieldNome = new javax.swing.JTextField();
        jComboBoxProd = new javax.swing.JComboBox<>();
        jButtonInsertar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextDescripcion = new javax.swing.JTextArea();
        jTextFieldPrezo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jTextFieldNome.setText("None");
        jTextFieldNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldNomeMouseClicked(evt);
            }
        });

        jComboBoxProd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxProdItemStateChanged(evt);
            }
        });

        jButtonInsertar.setText("Insertar");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });

        jTextDescripcion.setColumns(20);
        jTextDescripcion.setRows(5);
        jTextDescripcion.setText("Descripción");
        jTextDescripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextDescripcionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextDescripcion);

        jTextFieldPrezo.setText("Prezo");
        jTextFieldPrezo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldPrezoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldNome)
                            .addComponent(jComboBoxProd, 0, 189, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPrezo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonInsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminar))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrezo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInsertar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed

        //   eliminar producto
        producto = (Producto) jComboBoxProd.getSelectedItem();

        if (producto.getIdProducto() != 0) {
            try {
                Connection con = conexion();
                deleteProducto(con, producto);
                deleteStockProducto(con,producto);
                llenarComboProductos();

                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(JFrameTendas.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jTextFieldNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldNomeMouseClicked
        jTextFieldNome.setText("");
    }//GEN-LAST:event_jTextFieldNomeMouseClicked

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed

        String descripcion = jTextDescripcion.getText();
        String nome = jTextFieldNome.getText();

        if (!isFloat(jTextFieldPrezo.getText())) {
            JOptionPane.showMessageDialog(null, "Introduce un  valor numerico para o campo Prezo", "Aviso", 2);
        } else {

            float prezo = Float.parseFloat(jTextFieldPrezo.getText());

            if ("".equals(nome) || "".equals(descripcion) || "Descripcion".equals(descripcion) || "Nome".equals(nome)) {
                JOptionPane.showMessageDialog(null, "Introduce nome e descripción", "Aviso", 2);
            } else {
                try {

                    Producto producto = new Producto(0, nome, descripcion, prezo);
                    Connection con = conexion();
                    insertProducto(con, producto);
                    con.close();

                    jTextFieldNome.setText("Nome");
                    jTextDescripcion.setText("Descripcion");
                    jTextFieldPrezo.setText("Prezo");

                    llenarComboProductos();

                } catch (SQLException ex) {
                    Logger.getLogger(JFrameTendas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jComboBoxProdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxProdItemStateChanged

        producto = (Producto) jComboBoxProd.getSelectedItem();

        if (producto == null) {            
            producto = new Producto(0, "", "", 0);            
        } else if (producto.getIdProducto() == 0) {
            jTextFieldNome.setText("Nome");
            jTextFieldPrezo.setText("Prezo");
            jTextDescripcion.setText("Descripción");
        }else {
            jTextFieldNome.setText(producto.getNome());
            jTextFieldPrezo.setText(Float.toString(producto.getPrecio()));
            jTextDescripcion.setText(producto.getDescripcion());
        }


    }//GEN-LAST:event_jComboBoxProdItemStateChanged

    private void jTextDescripcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextDescripcionMouseClicked
        jTextDescripcion.setText("");
    }//GEN-LAST:event_jTextDescripcionMouseClicked

    private void jTextFieldPrezoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPrezoMouseClicked
        jTextFieldPrezo.setText("");
    }//GEN-LAST:event_jTextFieldPrezoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JComboBox<Producto> jComboBoxProd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextDescripcion;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPrezo;
    // End of variables declaration//GEN-END:variables

    private void formatearCombos() {
        jComboBoxProd.setRenderer(new DefaultListCellRenderer() {

            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index,
                    boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index,
                        isSelected, cellHasFocus);

                if (value != null) {
                    Producto producto = (Producto) value;
                    setText(producto.getNome());
                }
                return this;
            }
        });
    }

    private void llenarComboProductos() {
        try {
            //llenamos el conboBox de los productos  existentes
            jComboBoxProd.removeAllItems();

            Producto producto0 = new Producto(0, "Selecciona Producto", "", 0);
            jComboBoxProd.addItem(producto0);

            Connection con = conexion();

            List<Producto> productos = selectProductos(con);
            for (Producto p : productos) {
                jComboBoxProd.addItem(p);
            }
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(JFrameTendas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
